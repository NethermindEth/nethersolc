name: Build and test

on:
  workflow_dispatch:
  push:
    branches: [ arm_build ]
  # pull_request:

jobs:
  armv7_job:
    # The host should always be Linux
    runs-on: ubuntu-20.04
    name: Build on ubuntu-20.04 aarch64
    steps:
      - uses: actions/checkout@v2.1.0
      - uses: uraimo/run-on-arch-action@v2.1.1
        name: Run commands
        id: runcmd
        with:
          arch: aarch64
          distro: ubuntu20.04

          # Install dependencies
          install: |
            apt-get -y update
            apt-get install -y gcc-arm-none-eabi
            apt-get -y install build-essential cmake git libboost-all-dev

          # Set an output parameter `uname` for use in subsequent steps
          run: |
            uname -a
            echo ::set-output name=uname::$(uname -a)

      - name: Get the output
        # Echo the `uname` output parameter from the `runcmd` step
        run: |
          echo "The uname output was ${{ steps.runcmd.outputs.uname }}"


  # build-and-test:
  #   runs-on: ${{ matrix.config.os }}
  #   strategy:
  #     matrix:
  #       config:
  #         - os: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v1

  #     - name: Set up GCC
  #       uses: egor-tensin/setup-gcc@v1
  #       with:
  #           version: 11

  #     - name: Install dependencies
  #       run: >
  #           sudo apt-get -y update

  #           sudo apt-get -y install build-essential cmake git
  #           libboost-all-dev

  #     - name: Gen Cache Id
  #       run: |
  #         echo "::set-output name=timestamp::$(date '+%s')"
  #       id: cache-id

  #     - name: Cache build
  #       uses: actions/cache@v2
  #       with:
  #         path: build
  #         key: ${{ matrix.config.os }}-build-${{ steps.cache-id.outputs.timestamp }}
  #         restore-keys: |
  #           ${{ matrix.config.os }}-build-

  #     - name: Build
  #       run: |
  #         mkdir -p build && cd build
  #         cmake -DUSE_Z3=OFF .. && make solc -j$(nproc)

  #     - name: Upload the solc artifact
  #       uses: actions/upload-artifact@v2
  #       with:
  #           name: solc
  #           path: build/solc/solc
