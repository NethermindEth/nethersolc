name: Build and test

on:
  workflow_dispatch:
  push:
    branches: [ warp/develop ]
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        binary: ["isoltest", "solc"]
        

    steps:
      - name: Checkout code
        uses: actions/checkout@v1
        
      - name: Set up GCC
        uses: egor-tensin/setup-gcc@v1
        with:
            version: 11

      - name: Install dependencies
        run: >
            sudo apt-get -y update
            
            sudo apt-get -y install build-essential cmake git
            libboost-all-dev

      - name: Settings
        run: |
          echo "::set-output name=timestamp::$(date '+%s')"
          echo ::set-output name=binary::${{ matrix.binary }}
        id: settings

      - name: Cache build
        uses: actions/cache@v2
        with:
          path: build
          key: ${{ steps.settings.outputs.binary }}-build-${{ steps.settings.outputs.timestamp }}
          restore-keys: |
            ${{ matrix.binary }}-build-

      - name: Build solc
        if: ${{ steps.settings.outputs.binary == 'solc' }}
        run: |
          mkdir -p build && cd build
          cmake -DUSE_Z3=OFF -DCMAKE_BUILD_TYPE="Release" .. && make solc -j$(nproc)
          
      - name: Build isoltest
        if: ${{ steps.settings.outputs.binary == 'isoltest' }}
        run: |
          mkdir -p build && cd build
          cmake -DUSE_Z3=OFF -DCMAKE_BUILD_TYPE="Release" .. && cd test/tools/ && make isoltest -j$(nproc)

      - name: Upload the solc artifact
        if: ${{ steps.settings.outputs.binary == 'solc' }}
        uses: actions/upload-artifact@v2
        with:
            name: solc
            path: build/solc/solc

      - name: Upload the isoltest artifact
        if: ${{ steps.settings.outputs.binary == 'isoltest' }}
        uses: actions/upload-artifact@v2
        with:
            name: isoltest
            path: build/test/tools/isoltest
